[{"C:\\HrmsFrontEnd\\hrms-front-end\\src\\index.js":"1","C:\\HrmsFrontEnd\\hrms-front-end\\src\\reportWebVitals.js":"2","C:\\HrmsFrontEnd\\hrms-front-end\\src\\App.js":"3","C:\\HrmsFrontEnd\\hrms-front-end\\src\\layouts\\Navi.jsx":"4","C:\\HrmsFrontEnd\\hrms-front-end\\src\\layouts\\Dashboard.jsx":"5","C:\\HrmsFrontEnd\\hrms-front-end\\src\\services\\JobAdvertisementService.js":"6","C:\\HrmsFrontEnd\\hrms-front-end\\src\\layouts\\SignedIn.jsx":"7","C:\\HrmsFrontEnd\\hrms-front-end\\src\\layouts\\SignedOut.jsx":"8","C:\\HrmsFrontEnd\\hrms-front-end\\src\\pages\\JobAdvertisementList.jsx":"9","C:\\HrmsFrontEnd\\hrms-front-end\\src\\services\\CitieService.js":"10","C:\\HrmsFrontEnd\\hrms-front-end\\src\\layouts\\Citie.jsx":"11","C:\\HrmsFrontEnd\\hrms-front-end\\src\\services\\JobPositionService.js":"12","C:\\HrmsFrontEnd\\hrms-front-end\\src\\services\\WorkTimeService.js":"13","C:\\HrmsFrontEnd\\hrms-front-end\\src\\services\\WorkTypeService.js":"14","C:\\HrmsFrontEnd\\hrms-front-end\\src\\pages\\JobAdvertisementAdd.jsx":"15","C:\\HrmsFrontEnd\\hrms-front-end\\src\\pages\\Notification.jsx":"16"},{"size":535,"mtime":1624001267997,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":1063,"mtime":1624138821893,"results":"20","hashOfConfig":"18"},{"size":1611,"mtime":1624378230041,"results":"21","hashOfConfig":"18"},{"size":604,"mtime":1624378615880,"results":"22","hashOfConfig":"18"},{"size":651,"mtime":1623951025574,"results":"23","hashOfConfig":"18"},{"size":917,"mtime":1624378425459,"results":"24","hashOfConfig":"18"},{"size":392,"mtime":1624378423069,"results":"25","hashOfConfig":"18"},{"size":1911,"mtime":1624381783795,"results":"26","hashOfConfig":"18"},{"size":168,"mtime":1623939144217,"results":"27","hashOfConfig":"18"},{"size":653,"mtime":1624379058989,"results":"28","hashOfConfig":"18"},{"size":181,"mtime":1623940012204,"results":"29","hashOfConfig":"18"},{"size":172,"mtime":1623938935075,"results":"30","hashOfConfig":"18"},{"size":172,"mtime":1623938958584,"results":"31","hashOfConfig":"18"},{"size":11492,"mtime":1624378238675,"results":"32","hashOfConfig":"18"},{"size":1187,"mtime":1624378515653,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"zboech",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\HrmsFrontEnd\\hrms-front-end\\src\\index.js",[],["69","70"],"C:\\HrmsFrontEnd\\hrms-front-end\\src\\reportWebVitals.js",[],"C:\\HrmsFrontEnd\\hrms-front-end\\src\\App.js",[],"C:\\HrmsFrontEnd\\hrms-front-end\\src\\layouts\\Navi.jsx",[],"C:\\HrmsFrontEnd\\hrms-front-end\\src\\layouts\\Dashboard.jsx",[],"C:\\HrmsFrontEnd\\hrms-front-end\\src\\services\\JobAdvertisementService.js",[],"C:\\HrmsFrontEnd\\hrms-front-end\\src\\layouts\\SignedIn.jsx",["71"],"import React from 'react'\r\nimport { Dropdown, Menu, Image } from 'semantic-ui-react'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function SignedIn({signOut}) {\r\n\r\n    // const notify = () => toast.warning(\"Cikis yapildi !\");\r\n\r\n    return (\r\n        <div>\r\n            <Menu.Item>\r\n                <Image avatar spaced=\"right\" src=\"https://yt3.ggpht.com/yti/ANoDKi7GI6vUfZl2jymOuH2OvXZgBHeEy2yr1QpFG4ugTA=s108-c-k-c0x00ffffff-no-rj\" />\r\n                <Dropdown pointing=\"top left\" text=\"Enes Celik\">\r\n                    <Dropdown.Menu>\r\n            \r\n            \r\n                        <Dropdown.Item text=\"Bilgilerim\" icon=\"info\" />\r\n                        <Dropdown.Item text=\"Cikis yap\" icon=\"sign-out\" onClick={signOut}/>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </Menu.Item>\r\n        </div>\r\n    )\r\n}\r\n","C:\\HrmsFrontEnd\\hrms-front-end\\src\\layouts\\SignedOut.jsx",[],"C:\\HrmsFrontEnd\\hrms-front-end\\src\\pages\\JobAdvertisementList.jsx",[],"C:\\HrmsFrontEnd\\hrms-front-end\\src\\services\\CitieService.js",[],"C:\\HrmsFrontEnd\\hrms-front-end\\src\\layouts\\Citie.jsx",[],"C:\\HrmsFrontEnd\\hrms-front-end\\src\\services\\JobPositionService.js",[],"C:\\HrmsFrontEnd\\hrms-front-end\\src\\services\\WorkTimeService.js",[],"C:\\HrmsFrontEnd\\hrms-front-end\\src\\services\\WorkTypeService.js",[],"C:\\HrmsFrontEnd\\hrms-front-end\\src\\pages\\JobAdvertisementAdd.jsx",["72","73","74","75"],"import React, { useEffect, useState } from 'react'\r\nimport { Card,Form, Button} from 'semantic-ui-react';\r\nimport CitieService from '../services/CitieService';\r\nimport JobPositionService from '../services/JobPositionService';\r\nimport WorkTypeService from '../services/WorkTypeService';\r\nimport WorkTimeService from '../services/WorkTimeService';\r\nimport JobAdvertisementService from '../services/JobAdvertisementService';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from \"yup\";\r\n\r\nexport default function JobAdvertisementAdd() {\r\n\r\n    let jobAdvertisementService = new JobAdvertisementService();\r\n\r\n    const [cities, setCities] = useState([]);\r\n    const [jobPositions, setJobPositions] = useState([]);\r\n    const [workTypes, setWorkTypes] = useState([]);\r\n    const [workTimes, setWorkTimes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let cityService = new CitieService();\r\n        cityService.getAllCities().then((result) => setCities(result.data.data));\r\n\r\n        let jobPositionService = new JobPositionService();\r\n        jobPositionService.getAllJobPosition().then((result) => setJobPositions(result.data));\r\n\r\n        let workTypeService = new WorkTypeService();\r\n        workTypeService.getAllWorkType().then((result) => setWorkTypes(result.data.data));\r\n           \r\n        let workTimesService = new WorkTimeService();\r\n        workTimesService.getAllWorkTime().then((result) => setWorkTimes(result.data.data));\r\n    }, []);\r\n\r\n    const {\r\n\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleSubmit,\r\n        handleChange,\r\n        handleBlur,\r\n        onBlur,\r\n        setFieldValue,\r\n        dirty,\r\n        isSubmitting,\r\n    } = useFormik({\r\n        initialValues: {\r\n            jobPositionId: \"\",\r\n            numberOfOpenPosition: \"\",\r\n            cityId: \"\",\r\n            minSalary: \"\",\r\n            maxSalary: \"\",\r\n            workTypeId: \"\",\r\n            workTimeId: \"\",\r\n            applicationDeadline: \"\",\r\n            jobDescription: \"\",\r\n        },\r\n        validationSchema: Yup.object({\r\n            jobPositionId: Yup.number().required(\"Lutfen bir pozisyon seciniz !\"),\r\n            cityId: Yup.number().required(\"Lutfen bir sehir seciniz !\"),\r\n            numberOfOpenPosition: Yup.number().required(\"Lutfen acik pozisyon sayisi giriniz !\"),\r\n            minSalary: Yup.number().required(\"Lutfen minimum maas belirleyiniz !\"),\r\n            maxSalary: Yup.number().required(\"Lutfen maximum maas belirleyiniz !\"),\r\n            workTypeId: Yup.number().required(\"Lutfen calisma turunu seciniz !\"),\r\n            workTimeId: Yup.number().required(\"Lutfen calisma zamani seciniz !\"),\r\n            applicationDeadline: Yup.date().required(\"Lutfen son basvuru tarihini belirleyiniz !\"),\r\n            jobDescription: Yup.string().required(\"Lutfen aciklama giriniz !\"),\r\n        }),\r\n        onSubmit: (values) => {\r\n            values.employerId = 5;\r\n            console.log(values);\r\n            jobAdvertisementService.add(values).then((result) => console.log(result.data.data));        \r\n        \r\n        }\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Card fluid>\r\n                <Card.Content header=\"İŞ İLANI YAYINLAMA\"></Card.Content>\r\n                <Card.Content>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group widths=\"equal\">\r\n                            <Form.Input>\r\n                            <select\r\n                            id=\"jobPositionId\"\r\n                            onChange={handleChange}\r\n                            error={\r\n                                errors.jobPositionId &&\r\n                                touched.jobPositionId &&\r\n                                errors.jobPositionId\r\n                            }\r\n                            >\r\n                              <option value=\"Pozisyon Seciniz\"></option>\r\n                              {\r\n                              jobPositions.map((data)=> {\r\n                                  return <option value=\"\" key={data.id}>{data.positionName}</option>\r\n                              })\r\n                            \r\n                              }\r\n                           </select>\r\n                            </Form.Input>\r\n                            {/* <Form.Select \r\n                            id=\"jobPositionId\"\r\n                            name=\"jobPositionId\"\r\n                            options={jobPositionOptions}\r\n                            value={values.jobPositionId}\r\n                            onChange={formik.handleChange}\r\n                            label=\"Pozisyon\"\r\n                            placeholder=\"Pozisyon Seciniz\"\r\n                            error={\r\n                                errors.jobPositionId &&\r\n                                touched.jobPositionId &&\r\n                                errors.jobPositionId\r\n                            }\r\n                            ></Form.Select> */}\r\n                            \r\n                            <Form.Input>\r\n                            <select\r\n                            id=\"cityId\" \r\n                            value={values.cityId}\r\n                            onChange={handleChange}\r\n                            label=\"Sehir\"\r\n                            placeholder=\"Sehir Seciniz\"\r\n                            error={\r\n                                errors.cityId &&\r\n                                touched.cityId &&\r\n                                errors.cityId\r\n                            }\r\n                            >\r\n                                {\r\n                                    cities.map((data) =>{\r\n                                        return <option value=\"\" key={data.id}>{data.cityName}</option>\r\n                                    })\r\n                                }\r\n                            </select>\r\n                            </Form.Input>\r\n\r\n                        </Form.Group>\r\n                        <Form.Group widths=\"equal\">\r\n                            <Form.Input\r\n                            id=\"numberOfOpenPosition\"\r\n                            type=\"number\"\r\n                            value={values.numberOfOpenPosition}\r\n                            onChange={handleChange}\r\n                            label=\"Acik Pozisyon Sayisi\"\r\n                            placeholder=\"Acik Pozisyon Sayisi\"\r\n                            error={\r\n                                errors.numberOfOpenPosition &&\r\n                                touched.numberOfOpenPosition &&\r\n                                errors.numberOfOpenPosition\r\n                            }\r\n                            ></Form.Input>\r\n                        </Form.Group>\r\n                        <Form.Group widths=\"equal\">\r\n                            <Form.Input\r\n                            id=\"minSalary\"\r\n                            type=\"number\"\r\n                            value={values.minSalary}\r\n                            onChange={handleChange}\r\n                            label=\"Minimum Maas\"\r\n                            placeholder=\"Minimum Maas\"\r\n                            error={\r\n                                errors.minSalary && touched.minSalary && errors.minSalary\r\n                            }\r\n                            ></Form.Input>\r\n                             <Form.Input\r\n                            id=\"maxSalary\"\r\n                            type=\"number\"\r\n                            value={values.maxSalary}\r\n                            onChange={handleChange}\r\n                            label=\"Maximum Maas\"\r\n                            placeholder=\"Maximum Maas\"\r\n                            error={\r\n                                errors.maxSalary && touched.maxSalary && errors.maxSalary\r\n                            }\r\n                            ></Form.Input>\r\n                        </Form.Group>\r\n                        <Form.Group widths=\"equal\">\r\n                            <Form.Input>\r\n                            <select\r\n                            id=\"workTypeId\"\r\n                            value={values.workTypeId}\r\n                            onChange={handleChange}\r\n                            label=\"Calisma Turu\"\r\n                            select\r\n                            placeholder=\"Calisma Turu Seciniz\"\r\n                            error={\r\n                                errors.workTypeId && touched.workTypeId && errors.workTypeId\r\n                            }\r\n                            >\r\n                                {\r\n                                    workTypes.map((data) =>{\r\n                                        return <option value=\"\" key={data.id}>{data.workType}</option>\r\n                                    })\r\n                                }\r\n                            </select>\r\n                            </Form.Input>\r\n                            <Form.Input>\r\n                            <select\r\n                            id=\"workTimeId\"\r\n                            value={values.workTimeId}\r\n                            onChange={handleChange}\r\n                            label=\"Calisma Zamani\"\r\n                            select\r\n                            placeholder=\"Calisma Zamani Seciniz\"\r\n                            error={\r\n                                errors.workTimeId && touched.workTimeId && errors.workTimeId\r\n                              }\r\n                            >\r\n                                {\r\n                                    workTimes.map((data) =>{\r\n                                        return <option value=\"\" key={data.id}>{data.workTime}</option>\r\n                                    })\r\n                                }\r\n                            </select>\r\n                            </Form.Input>\r\n                            \r\n                        </Form.Group>\r\n                        <Form.Group widths=\"equal\">\r\n                            <Form.Input\r\n                            id=\"applicationDeadline\"\r\n                            type=\"date\"\r\n                            onChange={handleChange}\r\n                            value={values.applicationDeadline}\r\n                            label=\"Son Basvuru Tarihi\"\r\n                            error={errors.applicationDeadline && touched.applicationDeadline && errors.applicationDeadline}  \r\n                            ></Form.Input>\r\n                        </Form.Group>\r\n                        <Form.Group widths=\"equal\">\r\n                            <Form.TextArea\r\n                            id=\"jobDescription\"\r\n                            type=\"text\"\r\n                            onChange={handleChange}\r\n                            value={values.jobDescription}\r\n                            label=\"Aciklama\"\r\n                            placeholder=\"Aciklama Yaziniz...\"\r\n                            error={\r\n                                errors.jobDescription &&\r\n                                touched.jobDescription &&\r\n                                errors.jobDescription\r\n                            }\r\n                            ></Form.TextArea>\r\n                        </Form.Group>\r\n                        <Button type=\"submit\" primary dirty={isSubmitting} onClick={handleSubmit}>\r\n                            YAYINLA\r\n                        </Button>\r\n                    </Form>\r\n                </Card.Content>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","C:\\HrmsFrontEnd\\hrms-front-end\\src\\pages\\Notification.jsx",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":3,"column":10,"nodeType":"82","messageId":"83","endLine":3,"endColumn":15},{"ruleId":"80","severity":1,"message":"84","line":41,"column":9,"nodeType":"82","messageId":"83","endLine":41,"endColumn":19},{"ruleId":"80","severity":1,"message":"85","line":42,"column":9,"nodeType":"82","messageId":"83","endLine":42,"endColumn":15},{"ruleId":"80","severity":1,"message":"86","line":43,"column":9,"nodeType":"82","messageId":"83","endLine":43,"endColumn":22},{"ruleId":"80","severity":1,"message":"87","line":44,"column":9,"nodeType":"82","messageId":"83","endLine":44,"endColumn":14},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","'handleBlur' is assigned a value but never used.","'onBlur' is assigned a value but never used.","'setFieldValue' is assigned a value but never used.","'dirty' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]