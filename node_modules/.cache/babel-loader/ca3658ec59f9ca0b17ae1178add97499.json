{"ast":null,"code":"var _jsxFileName = \"C:\\\\HrmsFrontEnd\\\\hrms-front-end\\\\src\\\\pages\\\\Notification.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Card, CardGroup } from 'semantic-ui-react';\nimport JobAdvertisementService from '../services/JobAdvertisementService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Notification() {\n  _s();\n\n  const [jobAdvertisements, setJobAdvertisements] = useState([]);\n  const [activeId, setActiveId] = useState();\n  let jobAdvertisementService = new JobAdvertisementService();\n  useEffect(() => {\n    jobAdvertisementService.getAllJobAdvertisement().then(result => setJobAdvertisements(result.data.data));\n  }, []);\n\n  const handleActive = jobAdvertisementId => {\n    jobAdvertisementService.active(jobAdvertisementId).then(result => setActiveId()); // if(activeId.data.data.success){\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CardGroup, {\n      style: {\n        marginTop: 50\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        fluid: true,\n        children: jobAdvertisements.map(jobAdvertisement => /*#__PURE__*/_jsxDEV(Card.Content, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: jobAdvertisement.employer.companyName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n            children: jobAdvertisement.jobPositions.positionName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n            children: jobAdvertisement.city.cityName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n            children: [jobAdvertisement.maxSalary, \" - \", jobAdvertisement.minSalary]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n            children: jobAdvertisement.jobDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n            children: [!jobAdvertisement.isActive && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => handleActive(jobAdvertisement.id),\n              children: \"Active Et\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 68\n            }, this), \" \", jobAdvertisement.isActive && /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Pasif Yap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 177\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Notification, \"YdtoZx1J8VwI7kBhhaY77nT0ErI=\");\n\n_c = Notification;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"sources":["C:/HrmsFrontEnd/hrms-front-end/src/pages/Notification.jsx"],"names":["React","useState","useEffect","Button","Card","CardGroup","JobAdvertisementService","Notification","jobAdvertisements","setJobAdvertisements","activeId","setActiveId","jobAdvertisementService","getAllJobAdvertisement","then","result","data","handleActive","jobAdvertisementId","active","marginTop","map","jobAdvertisement","employer","companyName","jobPositions","positionName","city","cityName","maxSalary","minSalary","jobDescription","isActive","e","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,QAAwC,mBAAxC;AACA,OAAOC,uBAAP,MAAoC,qCAApC;;AACA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAEnC,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CR,QAAQ,CAAC,EAAD,CAA1D;AAEA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,EAAxC;AAEA,MAAIW,uBAAuB,GAAG,IAAIN,uBAAJ,EAA9B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AAEZU,IAAAA,uBAAuB,CAACC,sBAAxB,GAAiDC,IAAjD,CAAsDC,MAAM,IAAIN,oBAAoB,CAACM,MAAM,CAACC,IAAP,CAAYA,IAAb,CAApF;AACH,GAHQ,EAGN,EAHM,CAAT;;AAMA,QAAMC,YAAY,GAAIC,kBAAD,IAAwB;AACzCN,IAAAA,uBAAuB,CAACO,MAAxB,CAA+BD,kBAA/B,EAAmDJ,IAAnD,CAAwDC,MAAM,IAAIJ,WAAW,EAA7E,EADyC,CAEzC;AAEA;AACH,GALD;;AAMA,sBACI;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAES,QAAAA,SAAS,EAAE;AAAb,OAAlB;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,KAAK,MAAX;AAAA,kBAEQZ,iBAAiB,CAACa,GAAlB,CAAsBC,gBAAgB,iBAClC,QAAC,IAAD,CAAM,OAAN;AAAA,kCACI,QAAC,IAAD,CAAM,MAAN;AAAA,sBAAcA,gBAAgB,CAACC,QAAjB,CAA0BC;AAAxC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,sBAAYF,gBAAgB,CAACG,YAAjB,CAA8BC;AAA1C;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,IAAD,CAAM,IAAN;AAAA,sBAAYJ,gBAAgB,CAACK,IAAjB,CAAsBC;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII,QAAC,IAAD,CAAM,IAAN;AAAA,uBAAYN,gBAAgB,CAACO,SAA7B,SAA2CP,gBAAgB,CAACQ,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI,QAAC,IAAD,CAAM,WAAN;AAAA,sBACKR,gBAAgB,CAACS;AADtB;AAAA;AAAA;AAAA;AAAA,kBALJ,eAQI,QAAC,IAAD,CAAM,IAAN;AAAA,uBACK,CAACT,gBAAgB,CAACU,QAAlB,iBAA8B;AAAQ,cAAA,OAAO,EAAGC,CAAD,IAAOhB,YAAY,CAACK,gBAAgB,CAACY,EAAlB,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADnC,OACmHZ,gBAAgB,CAACU,QAAjB,iBAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADhJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GA5CuBzB,Y;;KAAAA,Y","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Button, Card, CardGroup } from 'semantic-ui-react'\r\nimport JobAdvertisementService from '../services/JobAdvertisementService';\r\nexport default function Notification() {\r\n\r\n    const [jobAdvertisements, setJobAdvertisements] = useState([])\r\n\r\n    const [activeId, setActiveId] = useState()\r\n\r\n    let jobAdvertisementService = new JobAdvertisementService();\r\n\r\n    useEffect(() => {\r\n\r\n        jobAdvertisementService.getAllJobAdvertisement().then(result => setJobAdvertisements(result.data.data))\r\n    }, [])\r\n\r\n\r\n    const handleActive = (jobAdvertisementId) => {\r\n        jobAdvertisementService.active(jobAdvertisementId).then(result => setActiveId())\r\n        // if(activeId.data.data.success){\r\n\r\n        // }\r\n    }\r\n    return (\r\n        <div>\r\n            <CardGroup style={{ marginTop: 50 }}>\r\n                <Card fluid>\r\n                    {\r\n                        jobAdvertisements.map(jobAdvertisement => (\r\n                            <Card.Content>\r\n                                <Card.Header>{jobAdvertisement.employer.companyName}</Card.Header>\r\n                                <Card.Meta>{jobAdvertisement.jobPositions.positionName}</Card.Meta>\r\n                                <Card.Meta>{jobAdvertisement.city.cityName}</Card.Meta>\r\n                                <Card.Meta>{jobAdvertisement.maxSalary} - {jobAdvertisement.minSalary}</Card.Meta>\r\n                                <Card.Description>\r\n                                    {jobAdvertisement.jobDescription}\r\n                                </Card.Description>\r\n                                <Card.Meta>\r\n                                    {!jobAdvertisement.isActive && <button onClick={(e) => handleActive(jobAdvertisement.id)}>Active Et</button>} {jobAdvertisement.isActive && <button>Pasif Yap</button>}\r\n                                </Card.Meta>\r\n                            </Card.Content>\r\n                        ))\r\n                    }\r\n                </Card>\r\n            </CardGroup>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}