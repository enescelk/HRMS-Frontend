{"ast":null,"code":"var _jsxFileName = \"C:\\\\HrmsFrontEnd\\\\hrms-front-end\\\\src\\\\pages\\\\JobAdvertisementAdd.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Form, Formik, useFormik } from 'formik';\nimport { FormField, Button } from 'semantic-ui-react';\nimport * as Yup from 'yup';\nimport CitieService from '../services/CitieService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function JobAdvertisementAdd() {\n  _s();\n\n  const [city, setCity] = useState([]);\n  useEffect(() => {\n    let cityService = new CitieService();\n    cityService.getAllCities().then(result => setCity(result.data.data));\n  }, []);\n  const initialValues = useFormik({\n    cityId: \"\",\n    jobPositionsId: \"\",\n    maxSalary: \"\",\n    minSalary: \"\",\n    numberOfOpenPosition: 1,\n    workTypeId: \"\",\n    workTimeId: \"\",\n    jobDescription: \"\",\n    applicationDeadline: \"\"\n  });\n  const schema = Yup.object().shape({\n    cityId: Yup.number().required(\"Sehir Bilgisi Alani Zorunludur\"),\n    jobPositionsId: Yup.number().required(\"Is Pozisyonu Bilgisi Alani Zorunludur\"),\n    minSalary: Yup.number().min(0, \"Maas 0'dan Az Olamaz\").required(\"Maximmum Maas Alani Zorunludur\"),\n    maxSalary: Yup.number().min(0, \"Maas 0'dan Az Olamaz\").required(\"Minimum Maas Alani Zorunludur\"),\n    numberOfOpenPosition: Yup.number().required(\"Lutfen Acik Pozisyon Sayisi Belirtiniz\").min(1, \"Acik Pozisyon 1'den Kucuk Olamaz\"),\n    workTypeId: Yup.number().required(\"Calisma Tipi Zorunludur\"),\n    workTimeId: Yup.number().required(\"Calisma Zamani Zorunludur\"),\n    jobDescription: Yup.string().required(\"Aciklama Alani Zorunludur\"),\n    applicationDeadline: Yup.date().required(\"Lutfen Son Basvuru Tarihini Belirtiniz\")\n  });\n  const cityOption = City.map((city, index) => ({\n    key: index,\n    text: city.cityName,\n    value: city.cityId\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui\",\n    style: {\n      marginTop: 100\n    },\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: schema,\n      onSubmit: values => {\n        console.log(values);\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"ui form\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"blue\",\n          type: \"submit\",\n          children: \" Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(JobAdvertisementAdd, \"A0ln4IXSNu8vdEJ0hl7ZJgO5i5I=\", false, function () {\n  return [useFormik];\n});\n\n_c = JobAdvertisementAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobAdvertisementAdd\");","map":{"version":3,"sources":["C:/HrmsFrontEnd/hrms-front-end/src/pages/JobAdvertisementAdd.jsx"],"names":["React","useEffect","useState","Form","Formik","useFormik","FormField","Button","Yup","CitieService","JobAdvertisementAdd","city","setCity","cityService","getAllCities","then","result","data","initialValues","cityId","jobPositionsId","maxSalary","minSalary","numberOfOpenPosition","workTypeId","workTimeId","jobDescription","applicationDeadline","schema","object","shape","number","required","min","string","date","cityOption","City","map","index","key","text","cityName","value","marginTop","values","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect,useState } from 'react'\r\nimport { Form, Formik, useFormik } from 'formik'\r\nimport { FormField,Button } from 'semantic-ui-react'\r\nimport * as Yup from 'yup';\r\nimport CitieService from '../services/CitieService'\r\n\r\nexport default function JobAdvertisementAdd() {\r\n\r\n    const [city, setCity] = useState([])\r\n\r\n    useEffect(() => {\r\n        let cityService = new CitieService();\r\n        cityService.getAllCities().then(result=>setCity(result.data.data));\r\n    }, [])\r\n\r\n    const initialValues = useFormik({\r\n        cityId: \"\",\r\n        jobPositionsId: \"\",\r\n        maxSalary: \"\",\r\n        minSalary: \"\",\r\n        numberOfOpenPosition: 1,\r\n        workTypeId: \"\",\r\n        workTimeId: \"\",\r\n        jobDescription: \"\",\r\n        applicationDeadline: \"\",\r\n    });\r\n\r\n    const schema = Yup.object().shape({\r\n        cityId: Yup.number().required(\"Sehir Bilgisi Alani Zorunludur\"),\r\n        jobPositionsId: Yup.number().required(\"Is Pozisyonu Bilgisi Alani Zorunludur\"),\r\n        minSalary: Yup.number().min(0, \"Maas 0'dan Az Olamaz\").required(\"Maximmum Maas Alani Zorunludur\"),\r\n        maxSalary: Yup.number().min(0, \"Maas 0'dan Az Olamaz\").required(\"Minimum Maas Alani Zorunludur\"),\r\n        numberOfOpenPosition: Yup.number().required(\"Lutfen Acik Pozisyon Sayisi Belirtiniz\").min(1, \"Acik Pozisyon 1'den Kucuk Olamaz\"),\r\n        workTypeId: Yup.number().required(\"Calisma Tipi Zorunludur\"),\r\n        workTimeId: Yup.number().required(\"Calisma Zamani Zorunludur\"),\r\n        jobDescription: Yup.string().required(\"Aciklama Alani Zorunludur\"),\r\n        applicationDeadline: Yup.date().required(\"Lutfen Son Basvuru Tarihini Belirtiniz\")\r\n    });\r\n\r\n    const cityOption = City.map((city, index) =>(\r\n        { key:index, text:city.cityName, value: city.cityId}\r\n    ));\r\n\r\n    return (\r\n        <div className=\"ui\" style={{marginTop:100}}>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={schema}\r\n                onSubmit={(values) => {\r\n                    console.log(values);\r\n                }}\r\n            >\r\n                <Form className=\"ui form\">\r\n\r\n                    <Button color='blue' type=\"submit\"> Submit</Button>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}