{"ast":null,"code":"var _jsxFileName = \"C:\\\\HrmsFrontEnd\\\\hrms-front-end\\\\src\\\\pages\\\\JobAdvertisementAdd.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, Form, Button } from 'semantic-ui-react';\nimport CitieService from '../services/CitieService';\nimport JobPositionService from '../services/JobPositionService';\nimport WorkTypeService from '../services/WorkTypeService';\nimport WorkTimeService from '../services/WorkTimeService';\nimport JobAdvertisementService from '../services/JobAdvertisementService';\nimport { useFormik } from 'formik';\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function JobAdvertisementAdd() {\n  _s();\n\n  let jobAdvertisementService = new JobAdvertisementService();\n  const [cities, setCities] = useState([]);\n  const [jobPositions, setJobPositions] = useState([]);\n  const [workTypes, setWorkTypes] = useState([]);\n  const [workTimes, setWorkTimes] = useState([]);\n  useEffect(() => {\n    let cityService = new CitieService();\n    cityService.getAllCities().then(result => setCities(result.data.data));\n    let jobPositionService = new JobPositionService();\n    jobPositionService.getAllJobPosition().then(result => setJobPositions(result.data));\n    let workTypeService = new WorkTypeService();\n    workTypeService.getAllWorkType().then(result => setWorkTypes(result.data.data));\n    let workTimesService = new WorkTimeService();\n    workTimesService.getAllWorkTime().then(result => setWorkTimes(result.data.data));\n  }, []);\n  const {\n    values,\n    errors,\n    touched,\n    handleSubmit,\n    handleChange,\n    handleBlur,\n    onBlur,\n    setFieldValue,\n    dirty,\n    isSubmitting\n  } = useFormik({\n    initialValues: {\n      jobPositionId: \"\",\n      numberOfOpenPosition: \"\",\n      cityId: \"\",\n      minSalary: \"\",\n      maxSalary: \"\",\n      workTypeId: \"\",\n      workTimeId: \"\",\n      applicationDeadline: \"\",\n      jobDescription: \"\"\n    },\n    validationSchema: Yup.object({\n      jobPositionId: Yup.number().required(\"Lutfen bir pozisyon seciniz !\"),\n      cityId: Yup.number().required(\"Lutfen bir sehir seciniz !\"),\n      numberOfOpenPosition: Yup.number().required(\"Lutfen acik pozisyon sayisi giriniz !\"),\n      minSalary: Yup.number().required(\"Lutfen minimum maas belirleyiniz !\"),\n      maxSalary: Yup.number().required(\"Lutfen maximum maas belirleyiniz !\"),\n      workTypeId: Yup.number().required(\"Lutfen calisma turunu seciniz !\"),\n      workTimeId: Yup.number().required(\"Lutfen calisma zamani seciniz !\"),\n      applicationDeadline: Yup.date().required(\"Lutfen son basvuru tarihini belirleyiniz !\"),\n      jobDescription: Yup.string().required(\"Lutfen aciklama giriniz !\")\n    }),\n    onSubmit: values => {\n      values.employerId = 5;\n      console.log(values);\n      jobAdvertisementService.add(values).then(result => console.log(result.data.data));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n        header: \"\\u0130\\u015E \\u0130LANI YAYINLAMA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            widths: \"equal\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"jobPositionId\",\n                error: errors.jobPositionId && touched.jobPositionId && errors.jobPositionId,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Pozisyon Seciniz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 31\n                }, this), jobPositions.map(data => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: data.positionName\n                  }, data.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 42\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"cityId\",\n                value: values.cityId,\n                onChange: handleChange,\n                label: \"Sehir\",\n                placeholder: \"Sehir Seciniz\",\n                error: errors.cityId && touched.cityId && errors.cityId,\n                children: cities.map(data => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: data.cityName\n                  }, data.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 48\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            widths: \"equal\",\n            children: /*#__PURE__*/_jsxDEV(Form.Input, {\n              id: \"numberOfOpenPosition\",\n              type: \"number\",\n              value: values.numberOfOpenPosition,\n              onChange: handleChange,\n              label: \"Acik Pozisyon Sayisi\",\n              placeholder: \"Acik Pozisyon Sayisi\",\n              error: errors.numberOfOpenPosition && touched.numberOfOpenPosition && errors.numberOfOpenPosition\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            widths: \"equal\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n              id: \"minSalary\",\n              type: \"number\",\n              value: values.minSalary,\n              onChange: handleChange,\n              label: \"Minimum Maas\",\n              placeholder: \"Minimum Maas\",\n              error: errors.minSalary && touched.minSalary && errors.minSalary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              id: \"maxSalary\",\n              type: \"number\",\n              value: values.maxSalary,\n              onChange: handleChange,\n              label: \"Maximum Maas\",\n              placeholder: \"Maximum Maas\",\n              error: errors.maxSalary && touched.maxSalary && errors.maxSalary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            widths: \"equal\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"workTypeId\",\n                value: values.workTypeId,\n                onChange: handleChange,\n                label: \"Calisma Turu\",\n                select: true,\n                placeholder: \"Calisma Turu Seciniz\",\n                error: errors.workTypeId && touched.workTypeId && errors.workTypeId,\n                children: workTypes.map(data => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: data.workType\n                  }, data.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 48\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"workTimeId\",\n                value: values.workTimeId,\n                onChange: handleChange,\n                label: \"Calisma Zamani\",\n                select: true,\n                placeholder: \"Calisma Zamani Seciniz\",\n                error: errors.workTimeId && touched.workTimeId && errors.workTimeId,\n                children: workTimes.map(data => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: data.workTime\n                  }, data.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 48\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            widths: \"equal\",\n            children: /*#__PURE__*/_jsxDEV(Form.Input, {\n              id: \"applicationDeadline\",\n              type: \"date\",\n              onChange: handleChange,\n              value: values.applicationDeadline,\n              label: \"Son Basvuru Tarihi\",\n              error: errors.applicationDeadline && touched.applicationDeadline && errors.applicationDeadline\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            widths: \"equal\",\n            children: /*#__PURE__*/_jsxDEV(Form.TextArea, {\n              id: \"jobDescription\",\n              type: \"text\",\n              onChange: handleChange,\n              value: values.jobDescription,\n              label: \"Aciklama\",\n              placeholder: \"Aciklama Yaziniz...\",\n              error: errors.jobDescription && touched.jobDescription && errors.jobDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            primary: true,\n            onClick: isSubmitting,\n            children: \"YAYINLA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(JobAdvertisementAdd, \"QHNoTyh2tB3QjyDhfBiBrXzvqCg=\", false, function () {\n  return [useFormik];\n});\n\n_c = JobAdvertisementAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobAdvertisementAdd\");","map":{"version":3,"sources":["C:/HrmsFrontEnd/hrms-front-end/src/pages/JobAdvertisementAdd.jsx"],"names":["React","useEffect","useState","Card","Form","Button","CitieService","JobPositionService","WorkTypeService","WorkTimeService","JobAdvertisementService","useFormik","Yup","JobAdvertisementAdd","jobAdvertisementService","cities","setCities","jobPositions","setJobPositions","workTypes","setWorkTypes","workTimes","setWorkTimes","cityService","getAllCities","then","result","data","jobPositionService","getAllJobPosition","workTypeService","getAllWorkType","workTimesService","getAllWorkTime","values","errors","touched","handleSubmit","handleChange","handleBlur","onBlur","setFieldValue","dirty","isSubmitting","initialValues","jobPositionId","numberOfOpenPosition","cityId","minSalary","maxSalary","workTypeId","workTimeId","applicationDeadline","jobDescription","validationSchema","object","number","required","date","string","onSubmit","employerId","console","log","add","map","positionName","id","cityName","workType","workTime"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Card,Form, Button} from 'semantic-ui-react';\r\nimport CitieService from '../services/CitieService';\r\nimport JobPositionService from '../services/JobPositionService';\r\nimport WorkTypeService from '../services/WorkTypeService';\r\nimport WorkTimeService from '../services/WorkTimeService';\r\nimport JobAdvertisementService from '../services/JobAdvertisementService';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from \"yup\";\r\n\r\nexport default function JobAdvertisementAdd() {\r\n\r\n    let jobAdvertisementService = new JobAdvertisementService();\r\n\r\n    const [cities, setCities] = useState([]);\r\n    const [jobPositions, setJobPositions] = useState([]);\r\n    const [workTypes, setWorkTypes] = useState([]);\r\n    const [workTimes, setWorkTimes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let cityService = new CitieService();\r\n        cityService.getAllCities().then((result) => setCities(result.data.data));\r\n\r\n        let jobPositionService = new JobPositionService();\r\n        jobPositionService.getAllJobPosition().then((result) => setJobPositions(result.data));\r\n\r\n        let workTypeService = new WorkTypeService();\r\n        workTypeService.getAllWorkType().then((result) => setWorkTypes(result.data.data));\r\n           \r\n        let workTimesService = new WorkTimeService();\r\n        workTimesService.getAllWorkTime().then((result) => setWorkTimes(result.data.data));\r\n    }, []);\r\n\r\n    const {\r\n\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleSubmit,\r\n        handleChange,\r\n        handleBlur,\r\n        onBlur,\r\n        setFieldValue,\r\n        dirty,\r\n        isSubmitting,\r\n    } = useFormik({\r\n        initialValues: {\r\n            jobPositionId: \"\",\r\n            numberOfOpenPosition: \"\",\r\n            cityId: \"\",\r\n            minSalary: \"\",\r\n            maxSalary: \"\",\r\n            workTypeId: \"\",\r\n            workTimeId: \"\",\r\n            applicationDeadline: \"\",\r\n            jobDescription: \"\",\r\n        },\r\n        validationSchema: Yup.object({\r\n            jobPositionId: Yup.number().required(\"Lutfen bir pozisyon seciniz !\"),\r\n            cityId: Yup.number().required(\"Lutfen bir sehir seciniz !\"),\r\n            numberOfOpenPosition: Yup.number().required(\"Lutfen acik pozisyon sayisi giriniz !\"),\r\n            minSalary: Yup.number().required(\"Lutfen minimum maas belirleyiniz !\"),\r\n            maxSalary: Yup.number().required(\"Lutfen maximum maas belirleyiniz !\"),\r\n            workTypeId: Yup.number().required(\"Lutfen calisma turunu seciniz !\"),\r\n            workTimeId: Yup.number().required(\"Lutfen calisma zamani seciniz !\"),\r\n            applicationDeadline: Yup.date().required(\"Lutfen son basvuru tarihini belirleyiniz !\"),\r\n            jobDescription: Yup.string().required(\"Lutfen aciklama giriniz !\"),\r\n        }),\r\n        onSubmit: (values) => {\r\n            values.employerId = 5;\r\n            console.log(values);\r\n            jobAdvertisementService.add(values).then((result) => console.log(result.data.data));        \r\n        \r\n        }\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Card fluid>\r\n                <Card.Content header=\"İŞ İLANI YAYINLAMA\"></Card.Content>\r\n                <Card.Content>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group widths=\"equal\">\r\n                            <Form.Input>\r\n                            <select\r\n                            id=\"jobPositionId\"\r\n                            error={\r\n                                errors.jobPositionId &&\r\n                                touched.jobPositionId &&\r\n                                errors.jobPositionId\r\n                            }\r\n                            >\r\n                              <option value=\"Pozisyon Seciniz\"></option>\r\n                              {\r\n                              jobPositions.map((data)=> {\r\n                                  return <option value=\"\" key={data.id}>{data.positionName}</option>\r\n                              })\r\n                            \r\n                              }\r\n                           </select>\r\n                            </Form.Input>\r\n                            {/* <Form.Select \r\n                            id=\"jobPositionId\"\r\n                            name=\"jobPositionId\"\r\n                            options={jobPositionOptions}\r\n                            value={values.jobPositionId}\r\n                            onChange={formik.handleChange}\r\n                            label=\"Pozisyon\"\r\n                            placeholder=\"Pozisyon Seciniz\"\r\n                            error={\r\n                                errors.jobPositionId &&\r\n                                touched.jobPositionId &&\r\n                                errors.jobPositionId\r\n                            }\r\n                            ></Form.Select> */}\r\n                            \r\n                            <Form.Input>\r\n                            <select\r\n                            id=\"cityId\" \r\n                            value={values.cityId}\r\n                            onChange={handleChange}\r\n                            label=\"Sehir\"\r\n                            placeholder=\"Sehir Seciniz\"\r\n                            error={\r\n                                errors.cityId &&\r\n                                touched.cityId &&\r\n                                errors.cityId\r\n                            }\r\n                            >\r\n                                {\r\n                                    cities.map((data) =>{\r\n                                        return <option value=\"\" key={data.id}>{data.cityName}</option>\r\n                                    })\r\n                                }\r\n                            </select>\r\n                            </Form.Input>\r\n\r\n                        </Form.Group>\r\n                        <Form.Group widths=\"equal\">\r\n                            <Form.Input\r\n                            id=\"numberOfOpenPosition\"\r\n                            type=\"number\"\r\n                            value={values.numberOfOpenPosition}\r\n                            onChange={handleChange}\r\n                            label=\"Acik Pozisyon Sayisi\"\r\n                            placeholder=\"Acik Pozisyon Sayisi\"\r\n                            error={\r\n                                errors.numberOfOpenPosition &&\r\n                                touched.numberOfOpenPosition &&\r\n                                errors.numberOfOpenPosition\r\n                            }\r\n                            ></Form.Input>\r\n                        </Form.Group>\r\n                        <Form.Group widths=\"equal\">\r\n                            <Form.Input\r\n                            id=\"minSalary\"\r\n                            type=\"number\"\r\n                            value={values.minSalary}\r\n                            onChange={handleChange}\r\n                            label=\"Minimum Maas\"\r\n                            placeholder=\"Minimum Maas\"\r\n                            error={\r\n                                errors.minSalary && touched.minSalary && errors.minSalary\r\n                            }\r\n                            ></Form.Input>\r\n                             <Form.Input\r\n                            id=\"maxSalary\"\r\n                            type=\"number\"\r\n                            value={values.maxSalary}\r\n                            onChange={handleChange}\r\n                            label=\"Maximum Maas\"\r\n                            placeholder=\"Maximum Maas\"\r\n                            error={\r\n                                errors.maxSalary && touched.maxSalary && errors.maxSalary\r\n                            }\r\n                            ></Form.Input>\r\n                        </Form.Group>\r\n                        <Form.Group widths=\"equal\">\r\n                            <Form.Input>\r\n                            <select\r\n                            id=\"workTypeId\"\r\n                            value={values.workTypeId}\r\n                            onChange={handleChange}\r\n                            label=\"Calisma Turu\"\r\n                            select\r\n                            placeholder=\"Calisma Turu Seciniz\"\r\n                            error={\r\n                                errors.workTypeId && touched.workTypeId && errors.workTypeId\r\n                            }\r\n                            >\r\n                                {\r\n                                    workTypes.map((data) =>{\r\n                                        return <option value=\"\" key={data.id}>{data.workType}</option>\r\n                                    })\r\n                                }\r\n                            </select>\r\n                            </Form.Input>\r\n                            <Form.Input>\r\n                            <select\r\n                            id=\"workTimeId\"\r\n                            value={values.workTimeId}\r\n                            onChange={handleChange}\r\n                            label=\"Calisma Zamani\"\r\n                            select\r\n                            placeholder=\"Calisma Zamani Seciniz\"\r\n                            error={\r\n                                errors.workTimeId && touched.workTimeId && errors.workTimeId\r\n                              }\r\n                            >\r\n                                {\r\n                                    workTimes.map((data) =>{\r\n                                        return <option value=\"\" key={data.id}>{data.workTime}</option>\r\n                                    })\r\n                                }\r\n                            </select>\r\n                            </Form.Input>\r\n                            \r\n                        </Form.Group>\r\n                        <Form.Group widths=\"equal\">\r\n                            <Form.Input\r\n                            id=\"applicationDeadline\"\r\n                            type=\"date\"\r\n                            onChange={handleChange}\r\n                            value={values.applicationDeadline}\r\n                            label=\"Son Basvuru Tarihi\"\r\n                            error={errors.applicationDeadline && touched.applicationDeadline && errors.applicationDeadline}  \r\n                            ></Form.Input>\r\n                        </Form.Group>\r\n                        <Form.Group widths=\"equal\">\r\n                            <Form.TextArea\r\n                            id=\"jobDescription\"\r\n                            type=\"text\"\r\n                            onChange={handleChange}\r\n                            value={values.jobDescription}\r\n                            label=\"Aciklama\"\r\n                            placeholder=\"Aciklama Yaziniz...\"\r\n                            error={\r\n                                errors.jobDescription &&\r\n                                touched.jobDescription &&\r\n                                errors.jobDescription\r\n                            }\r\n                            ></Form.TextArea>\r\n                        </Form.Group>\r\n                        <Button type=\"submit\" primary onClick={isSubmitting}>\r\n                            YAYINLA\r\n                        </Button>\r\n                    </Form>\r\n                </Card.Content>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}